name: E2E Testing Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    steps:
    # 1. Uygulama reposunu checkout et
    - name: Checkout Application Code
      uses: actions/checkout@v4
      with:
        path: app

    # 2. Node.js kurulumunu yap
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # 3. Backend bağımlılıklarını yükle
    - name: Install Backend Dependencies
      run: |
        cd app/backend
        npm install

    # 4. Newman'ı küresel olarak yükle
    - name: Install Newman
      run: npm install -g newman

    # 5. Frontend için serve paketini küresel olarak yükle
    - name: Install Serve Package
      run: npm install -g serve

    # 6. Frontend bağımlılıklarını yükle
    - name: Install Frontend Dependencies
      run: |
        cd app/frontend
        npm install

    # 7. Backend sunucusunu arka planda başlat
    - name: Start Backend Server
      run: |
        cd app/backend
        npm start &
        echo $! > backend.pid
        sleep 10
        curl -f http://localhost:3001 || echo "Backend started"

    # 8. Frontend'i inşa et ve başlat
    - name: Build and Start Frontend
      run: |
        cd app/frontend
        CI=false npm run build
        npx serve -s build -l 3000 &
        echo $! > frontend.pid
        sleep 15
        curl -f http://localhost:3000 || echo "Frontend started"

    # 9. API Testlerini Newman ile Çalıştır
    - name: Run API Tests with Newman
      run: |
        cd test/postman
        newman run postman_collection.json -e environment.json --reporters cli,html --reporter-html-export newman-report.html
        mv newman-report.html tests/reports/

    # 10. Newman Raporunu Artifact Olarak Yükle
    - name: Upload Newman Report
      uses: actions/upload-artifact@v4
      with:
        name: newman-report
        path: tests/reports/newman-report.html
        retention-days: 30

    # 11. Cucumber Raporlarını Yükle
    - name: Upload Cucumber HTML Report
      uses: actions/upload-artifact@v4
      with:
        name: cucumber-html-report
        path: |
          tests/target/**/*cucumber*.html
          tests/target/**/*report*.html
        retention-days: 30

    # 12. PR'ye Test Sonuçlarını Yorum Olarak Ekleyin
    - name: Comment Test Results on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          
          let reportComment = '# 🧪 API Test Results\n\n';
          
          // Newman rapor bağlantısını ekleyin
          const reportUrl = 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}';
          reportComment += `**🔗 [View Test Report](tests/reports/newman-report.html)**\n\n`;
          reportComment += '## 📊 Test Reports\n';
          reportComment += '| 📁 Artifact | 📝 Description |\n';
          reportComment += '|-------------|----------------|\n';
          reportComment += '| 📋 `newman-report` | HTML formatında Newman raporu |\n';
          
          // Cucumber rapor bağlantısını ekleyin
          const cucumberUrl = process.env.CUCUMBER_REPORT_URL;
          if (cucumberUrl && cucumberUrl !== 'NOT_FOUND' && cucumberUrl !== '') {
            reportComment += '## 🥒 Live Cucumber Report\n';
            reportComment += `**🔗 [View Interactive Cucumber Report](${cucumberUrl})**\n\n`;
            reportComment += '> 📋 Bu rapor canlı olup, test sonuçlarını detaylı şekilde inceleyebilirsiniz.\n\n';
          } else {
            reportComment += '## ⚠️ Cucumber Report\n';
            reportComment += 'Online Cucumber report URL bulunamadı. Lütfen artifacts\'taki logları kontrol edin.\n\n';
          }
          
          reportComment += '## 📊 Available Reports\n\n';
          reportComment += '| 📁 Artifact | 📝 Description |\n';
          reportComment += '|-------------|----------------|\n';
          reportComment += '| 📋 `newman-report` | HTML formatında Newman raporu |\n';
          reportComment += '| 🥒 `cucumber-html-report` | HTML formatında Cucumber raporları |\n';
          reportComment += '| 📊 `comprehensive-test-reports` | Tüm test dosyaları (JSON, XML, HTML) |\n';
          reportComment += '| 📸 `test-screenshots` | Hata durumunda ekran görüntüleri |\n\n';
          
          reportComment += '**💡 İpucu:** Yukarıdaki "Artifacts" bölümünden istediğiniz raporu indirebilirsiniz.\n\n';
          reportComment += `**🔗 [View Full Workflow Run](${context.payload.pull_request.html_url}/checks)`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: reportComment
          });
